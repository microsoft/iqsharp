// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

using System.Collections.Generic;

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Microsoft.Quantum.IQSharp.Common
{
    /// <summary>
    /// The status after executing the requested operation.
    /// </summary>
    public enum Status
    {
        success,
        error
    }

    /// <summary>
    ///  A data structure representing the response from one of the Controllers.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public class Response<T>
    {
        public Response() { }

        public Response(Status status, string[] messages, T result = default(T))
        {
            this.status = status;
            this.messages = messages;
            this.result = result;
        }

        /// <summary>
        /// Whether the request ended in success or error. 
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public Status status;

        /// <summary>
        /// List of messages generated by the call. For example, it can return 
        /// the list of warnings from a successful compilation, or the list of Messages
        /// from a Q# simulation.
        /// </summary>
        public string[] messages;

        /// <summary>
        /// The actual result from the operation. From simulation this is the result of
        /// the operation being simulated. For compilation, the list of operations found in the snippet.
        /// </summary>
        public T result;
    }
}
