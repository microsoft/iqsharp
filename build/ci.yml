name: $(Build.Major).$(Build.Minor).$(DayOfMonth)$(rev:rr)

trigger: none

pr:
- main
- feature/*
- features/*
- release/*

schedules:
- cron: "0 9 * * Sat"
  displayName: 'Build for Component Governance'
  branches:
    include:
    - main
  always: true

variables:
  Build.Major: 0
  Build.Minor: 18
  Drops.Dir: $(Build.ArtifactStagingDirectory)/drops
  IQSharp.Hosting.Env: 'build-agent-iqsharp'
  agent.preferPowerShellOnContainers: false
  ${{ if eq(variables['Agent.OS'], 'Windows_NT') }}:
    CondaShellHook: "(& 'C:\Miniconda3\Scripts\conda.exe' 'shell.powershell' 'hook') | Out-String | Invoke-Expression"
  ${{ if eq(variables['Agent.OS'], 'Darwin') }}:
    CondaShellHook: "(& '/usr/local/bin/conda' 'shell.powershell' 'hook') | Out-String | Invoke-Expression"
  ${{ if eq(variables['Agent.OS'], 'Linux') }}:
    CondaShellHook: "(& '/miniconda/bin/conda' 'shell.powershell' 'hook') | Out-String | Invoke-Expression"

jobs:
- job: "iqsharp"
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: steps.yml
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      failOnAlert: true

- job: "test_selenium"
  pool:
    vmImage: 'windows-2019'
  steps:
  - template: steps-selenium.yml
  condition: ne(variables['Skip.Tests'], 'true')

- job: "pack_selfcontained"
  dependsOn: "iqsharp"
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: steps-selfcontained.yml
  condition: ne(variables['Enable.Conda'], 'false')

- job: "pack_conda_macos"
  dependsOn: "pack_selfcontained"
  pool:
    vmImage: 'macOS-latest'
  steps:
  - template: steps-conda.yml
  condition: ne(variables['Enable.Conda'], 'false')

- job: "pack_conda_linux"
  dependsOn: "pack_selfcontained"
  pool:
    vmImage: 'ubuntu-latest'
  container: mcr.microsoft.com/quantum/linux-selfcontained:latest
  steps:
  - template: steps-conda.yml
  condition: ne(variables['Enable.Conda'], 'false')

- job: "pack_conda_windows"
  dependsOn: "pack_selfcontained"
  pool:
    vmImage: 'windows-latest'
  container: mcr.microsoft.com/quantum/windows-selfcontained:latest
  steps:
  - template: steps-conda.yml
  condition: ne(variables['Enable.Conda'], 'false')
